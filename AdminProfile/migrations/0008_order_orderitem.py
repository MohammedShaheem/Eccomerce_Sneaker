# Generated by Django 5.1.4 on 2025-02-15 10:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('AdminProfile', '0007_cart_cartitem'),
        ('UserProfile', '0004_address'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=50, unique=True)),
                ('ordered_date', models.DateTimeField(auto_now_add=True)),
                ('order_status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('SHIPPED', 'Shipped'), ('DELIVERED', 'Delivered'), ('CANCELED', 'Canceled'), ('RETURNED', 'Returned')], default='PENDING', max_length=20)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('FAILED', 'Failed'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('payment_method', models.CharField(choices=[('CARD', 'Credit/Debit Card'), ('UPI', 'UPI'), ('WALLET', 'Wallet'), ('COD', 'Cash on Delivery')], max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('canceled_date', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('return_date', models.DateTimeField(blank=True, null=True)),
                ('return_reason', models.TextField(blank=True, null=True)),
                ('refund_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('refund_date', models.DateTimeField(blank=True, null=True)),
                ('tracking_id', models.CharField(blank=True, max_length=100, null=True)),
                ('estimated_delivery_date', models.DateField(blank=True, null=True)),
                ('cart', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='AdminProfile.cart')),
                ('shipping_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UserProfile.address')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Order',
                'ordering': ['-ordered_date'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('price_per_item', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('discount_applied', models.BooleanField(default=False)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_prcentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('is_returned', models.BooleanField(default=False)),
                ('return_date', models.DateTimeField(blank=True, null=True)),
                ('return_reason', models.TextField(blank=True, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='AdminProfile.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='AdminProfile.product')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='AdminProfile.variancetable')),
            ],
            options={
                'db_table': 'OrderItem',
                'ordering': ['id'],
            },
        ),
    ]
